<?php
/**
 * Modifies and updates rewrite rules for Views V2.
 *
 * @since   TBD
 *
 * @package Tribe\Events\Views\V2
 */

namespace Tribe\Events\Views\V2;

/**
 * Class Rewrite
 *
 * @since   TBD
 *
 * @package Tribe\Events\Views\V2
 */
class Rewrite {

	/**
	 * Filters The Events Calendar rewrite rules to fix and update them, if required.
	 *
	 * @since TBD
	 *
	 * @param array  $bases  An array of rewrite bases that have been generated.
	 * @param string $method The method that's being used to generate the bases; defaults to `regex`.
	 *
	 * @return array<string,array> The filtered rewrite rules, updated or modified if required.
	 */
	public function filter_raw_i18n_slugs( array $bases, $method ) {
		if ( $method !== 'regex' ) {
			return $bases;
		}

		$bases = $this->add_url_encoded_slugs($bases);

		return $bases;
	}

	/**
	 * Adds the URL encoded version of the slugs to the rewrite rules to ensure rewrites will keep working
	 * in localized installations.
	 *
	 * @since TBD
	 *
	 * @param array<string,array> $bases The raw bases, as generated by The Events Calendar rewrite handler.
	 *
	 * @return array<string,array> The rules, updated to include the URL encoded version of the slugs.
	 */
	protected function add_url_encoded_slugs($bases) {
		array_walk( $bases, static function ( array &$base_group ) {
			foreach ( $base_group as $value ) {
				$encoded = urlencode( $value );
				if ( $encoded === $value ) {
					continue;
				}
				$base_group[] = $encoded;
			}
			$base_group = array_unique( $base_group );
		} );

		return $bases;
	}
}
